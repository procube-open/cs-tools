name: Publish Container Image

on:
  push:
    branches:
      - 'main'

permissions:
  contents: write
  packages: write

jobs:
  publish:
    name: Publish Container Image
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Check if changeset is in prerelease mode
        id: check-in-pre
        run: echo "pre=$(test -r .changeset/pre.json; echo $?)"  >> "$GITHUB_OUTPUT"
      - name: Get version to be released
        id: get-version
        run: node -e "console.log('version=' + require('./package.json').version)" >> "$GITHUB_OUTPUT"
      - name: Get package name
        id: get-name
        run: node -e "console.log('name=' + require('./package.json').name)" >> "$GITHUB_OUTPUT"
      - name: Check if the image for the version is already pushed
        id: tag-list
        run: |
          echo "taglist=$(curl -H "Authorization: Bearer $(echo ${GITHUB_TOKEN} | base64)" https://ghcr.io/v2/${GITHUB_REPOSITORY_OWNER}/${PACKAGE_NAME}/tags/list)" >> "$GITHUB_OUTPUT"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PACKAGE_NAME: ${{ steps.get-name.outputs.name }}
      - name: Log in to Docker Hub
        if: >-
          ${{steps.check-in-pre.outputs.pre == 1 &&
          ! contains(fromJson(steps.tag-list.outputs.taglist).tags, steps.get-version.outputs.version)}}
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Add Tag
        if: >-
          ${{steps.check-in-pre.outputs.pre == 1 &&
          ! contains(fromJson(steps.tag-list.outputs.taglist).tags, steps.get-version.outputs.version)}}
        run: |
          git tag v${VERSION}
          git push --tags origin v${VERSION}
        env:
          VERSION: ${{ steps.get-version.outputs.version }}
      - name: Extract metadata (tags, labels) for Docker
        if: >-
          ${{steps.check-in-pre.outputs.pre == 1 &&
          ! contains(fromJson(steps.tag-list.outputs.taglist).tags, steps.get-version.outputs.version)}}
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: "ghcr.io/${{ github.repository_owner }}/${{ steps.get-name.outputs.name }}"
          flavor: |
            latest=false
          tags: |
            type=semver,pattern={{ version }},value=${{ steps.get-version.outputs.version }}
            type=semver,pattern={{major}}.{{minor}},value=${{ steps.get-version.outputs.version }}
            type=semver,pattern={{major}},value=${{ steps.get-version.outputs.version }}
            type=raw,value=latest
      - name: Build and push Docker image
        if: >-
          ${{steps.check-in-pre.outputs.pre == 1 &&
          ! contains(fromJson(steps.tag-list.outputs.taglist).tags, steps.get-version.outputs.version)}}
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          # 必要に応じて秘密情報を build-args を追加
          # build-args: |
          #   "XXX_KEY=${{ secrets.XXX_KEY }}"
