name: Label and Publish RC for Pull Request

on: 
  pull_request:
    types: [opened, synchronize]

permissions:
  contents: write
  pull-requests: write
  packages: write
    
jobs:
  label-publish:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Check if changeset is in prerelease mode
        id: check-in-pre
        run: echo "pre=$(test -r .changeset/pre.json; echo $?)"  >> "$GITHUB_OUTPUT"
      - name: Get package name to be released
        id: get-name
        run: node -e "console.log('name=' + require('./package.json').name)" >> "$GITHUB_OUTPUT"
      - name: Get version to be released
        id: get-version
        run: node -e "console.log('version=' + require('./package.json').version)" >> "$GITHUB_OUTPUT"
      - name: Check if the image for the version is already pushed
        id: versions
        run: |
          echo "versions=$(yarn info $NAME --json versions) >> "$GITHUB_OUTPUT"
        env:
          NAME: ${{ steps.get-name.outputs.name }}
      - name: Use Node.js ${{ matrix.node-version }}
        if: >-
          ${{steps.check-in-pre.outputs.pre == 0 &&
          ! contains(fromJson(steps.versions.outputs.versions), steps.get-version.outputs.version)}}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'
          registry-url: 'https://npm.pkg.github.com'
          token: ${{ secrets.GITHUB_TOKEN }}
          # Defaults to the user or organization that owns the workflow file
          # scope: '@YOUR-ORGANIZATION'
      - name: Publish npm package
        if: >-
          ${{steps.check-in-pre.outputs.pre == 0 &&
          ! contains(fromJson(steps.versions.outputs.versions), steps.get-version.outputs.version)}}
        run: yarn publish
